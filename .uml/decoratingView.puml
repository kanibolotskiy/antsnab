@startuml

class \Loader {
    ...
    +view($route, $data): string
}

package WS\TemplateDecorator {
    interface IDecorator { 
        +process() 
    }

    class TemplateDecorator {
        -$wrapee: \Template
        -$data: array
        __construct($adaptor)
        +set($key, $value): void
        +render($template): string
        
        -getRoute($template): string
        -getDecorator($route): TemplateDecorator 
    }

    class ConreteDecorator1 implements IDecorator { 
    }

}

class \Template {
    -$adaptor 
    __construct($adaptor)
    +set($key, $value): void
    +render($template): string 
}

package "Concrete \Template" <<Cloud>> {
    class PHP {
        -$data:array
        +set($key, $value): void
        +render($template): string 
    }
    class Twig {
        -$data:array
        +set($key, $value): void
        +render($template): string 
    }
}
class tpl << (F, #FF7700) File >> {
}

\Loader .r.> Config : "template_type"
\Loader ..> TemplateDecorator: "use \n new TemplateDecorator(config.template_type)"
TemplateDecorator o--> "1..1" IDecorator
TemplateDecorator o-r-> "1..1" \Template
\Template o-d-> "1..1" "Concrete \Template"

"Concrete \Template" ..> tpl : "includes"

@enduml
